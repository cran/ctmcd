// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#ifndef __ctmcd_RcppExports_h__
#define __ctmcd_RcppExports_h__

#include <RcppArmadillo.h>
#include <Rcpp.h>

namespace ctmcd {

    using namespace Rcpp;

    namespace {
        void validateSignature(const char* sig) {
            Rcpp::Function require = Rcpp::Environment::base_env()["require"];
            require("ctmcd", Rcpp::Named("quietly") = true);
            typedef int(*Ptr_validate)(const char*);
            static Ptr_validate p_validate = (Ptr_validate)
                R_GetCCallable("ctmcd", "ctmcd_RcppExport_validate");
            if (!p_validate(sig)) {
                throw Rcpp::function_not_exported(
                    "C++ function with signature '" + std::string(sig) + "' not found in ctmcd");
            }
        }
    }

    inline RcppExport SEXP rNijTRiT_ModRej(const NumericMatrix tmabs, const double te, const Rcpp::NumericMatrix gm) {
        typedef SEXP(*Ptr_rNijTRiT_ModRej)(SEXP,SEXP,SEXP);
        static Ptr_rNijTRiT_ModRej p_rNijTRiT_ModRej = NULL;
        if (p_rNijTRiT_ModRej == NULL) {
            validateSignature("RcppExport SEXP(*rNijTRiT_ModRej)(const NumericMatrix,const double,const Rcpp::NumericMatrix)");
            p_rNijTRiT_ModRej = (Ptr_rNijTRiT_ModRej)R_GetCCallable("ctmcd", "ctmcd_rNijTRiT_ModRej");
        }
        RObject __result;
        {
            RNGScope __rngScope;
            __result = p_rNijTRiT_ModRej(Rcpp::wrap(tmabs), Rcpp::wrap(te), Rcpp::wrap(gm));
        }
        if (__result.inherits("interrupted-error"))
            throw Rcpp::internal::InterruptedException();
        if (__result.inherits("try-error"))
            throw Rcpp::exception(as<std::string>(__result).c_str());
        return Rcpp::as<RcppExport SEXP >(__result);
    }

    inline RcppExport SEXP rNijTRiT_Unif(const arma::mat tmabs, const double te, const arma::mat gm, const arma::mat tpm) {
        typedef SEXP(*Ptr_rNijTRiT_Unif)(SEXP,SEXP,SEXP,SEXP);
        static Ptr_rNijTRiT_Unif p_rNijTRiT_Unif = NULL;
        if (p_rNijTRiT_Unif == NULL) {
            validateSignature("RcppExport SEXP(*rNijTRiT_Unif)(const arma::mat,const double,const arma::mat,const arma::mat)");
            p_rNijTRiT_Unif = (Ptr_rNijTRiT_Unif)R_GetCCallable("ctmcd", "ctmcd_rNijTRiT_Unif");
        }
        RObject __result;
        {
            RNGScope __rngScope;
            __result = p_rNijTRiT_Unif(Rcpp::wrap(tmabs), Rcpp::wrap(te), Rcpp::wrap(gm), Rcpp::wrap(tpm));
        }
        if (__result.inherits("interrupted-error"))
            throw Rcpp::internal::InterruptedException();
        if (__result.inherits("try-error"))
            throw Rcpp::exception(as<std::string>(__result).c_str());
        return Rcpp::as<RcppExport SEXP >(__result);
    }

}

#endif // __ctmcd_RcppExports_h__
